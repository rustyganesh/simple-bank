name: Deploy to production

on:
  push:
    branches: [ "main" ]  # Change to 'main' if you want it to trigger on main

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Build and Deploy to ECR
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Check out code
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # 3️⃣ Ensure ECR repo exists
      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names simplebank --region ap-south-1 || \
          aws ecr create-repository --repository-name simplebank --region ap-south-1

      # 4️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets and save to app.env
        run: |
          aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]'>app.env  

      # 5️⃣ Build, tag, and push Docker image 
      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
                       -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          echo "Pushing Docker image to ECR..."
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
